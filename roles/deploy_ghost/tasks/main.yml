---

- name: MySQL persistent volume claim
  kubernetes.core.k8s:
    state: present
    src: "{{ mysql_pvc_file }}"

- name: MySQL kubernetes deployment
  kubernetes.core.k8s:
    state: present
    src: "{{ mysql_deploy_file }}"

- name: MySQL kubernetes service
  kubernetes.core.k8s:
    state: present
    src: "{{ mysql_service_file }}"

- name: Getting name of MySQL pod
  kubernetes.core.k8s_info:
    kind: Pod 
    namespace: default
    label_selectors: 
      - app = mysql
  register: mysql_deployment

- name: Wait for MySQL pod to be ready
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    name: "{{ mysql_deployment.resources.0.metadata.name }}"
    namespace: default
    wait: true
    wait_condition: 
      type: Ready
    wait_timeout: 200

- name: Ghost kubernetes service
  kubernetes.core.k8s:
    state: present
    src: "{{ ghost_service_file}}"

- name: Wait for Ghost service to be ready 
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    name: ghost-service
    namespace: default
  register: ghost_service
  until: "ghost_service.resources.0.status.loadBalancer.ingress.0.ip is defined"
  delay: 15
  retries: 5

- name: Test Inline
  lineinfile:
    path: inventory/gcp.yml
    regexp: '^\s*ghost_ip:'
    line: "  ghost_ip: {{ ghost_service.resources.0.status.loadBalancer.ingress.0.ip }}"
    state: present
    backrefs: yes

- name: Test Inline Ghost Deployment
  lineinfile:
    path: "{{ ghost_deploy_file }}"
    regexp: '^(\s*)value:(\s*)http'
    line: '          value: http://{{ ghost_service.resources.0.status.loadBalancer.ingress.0.ip }}:{{ ghost_port }}/'
    state: present
    backrefs: yes

- name: Ghost kubernetes deployment
  kubernetes.core.k8s:
    state: present
    template:
      path: "{{ ghost_deploy_file }}"

- name: Getting name of Ghost pod
  kubernetes.core.k8s_info:
    kind: Pod 
    namespace: default
    label_selectors: 
      - app = ghost
  register: ghost_deployment

- name: Wait for Ghost pod to be ready
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    name: "{{ ghost_deployment.resources.0.metadata.name }}"
    namespace: default
    wait: true
    wait_condition: 
      type: Ready
    wait_timeout: 200

- name: Encrypt admin password
  shell: "python3 -c 'import bcrypt; print(bcrypt.hashpw(b\"{{ ghost_admin_pw }}\", bcrypt.gensalt(rounds=10)).decode(\"ascii\"))'"
  register:  ghost_admin_pw_encrypted

- name: Create admin in Ghost DB
  kubernetes.core.k8s_exec:
    namespace: default
    pod: "{{ mysql_deployment.resources.0.metadata.name }}"
    command: mysql ghost -e "UPDATE users SET name='{{ ghost_admin_name }}', password='{{ ghost_admin_pw_encrypted.stdout }}', email='{{ ghost_admin_email }}', status='active' WHERE id=1;"
